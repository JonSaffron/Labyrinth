
1.	Player moves into space occupied by boulder. Boulder checks adjacent space. 
	Space is empty so boulder move into it.
	
	Calls Boulder.CanBePushed(by player, to the left) which returns yes

2.	Player moves into space occupied by boulder. Boulder checks adjacent space.
	Space is occupied, so boulder checks if the object pushing it can be pushed back.
	Space behind player is free, so both player and boulder can move backwards.

	Calls Boulder.CanBePushed(by player, to the left) which
	Calls Player.CanBeBouncedBack(to the right) which returns yes

3.	Player moves into space occupied by boulder. Boulder checks adjacent space.
	Space is occupied, so boulder checks if the object pushing it can be pushed back.
	Space behind player is occupied, so player moves back to original position.

	Calls Boulder.CanBePushed(by player, to the left) which
	Calls Player.CanBeBouncedBack(to the right) which returns no

4.	Player moves into space occupied by boulder. Boulder checks adjacent space.
	Space is occupied, so boulder checks if the object pushing it can be pushed back.
	Space behind player contains another moveable object, so player must check if the second object can be moved back.
	There is space for the second object to move into, so the player and the first boulder move backwards, and the second object moves too.

	Calls Boulder.CanBePushed(by player, to the left) which
	Calls Player.CanBeBouncedBack(to the right) which
	calls 2ndBoulder.CanBeBouncedBack(to the right) which return yes

5.	Player moves into space occupied by boulder. Boulder checks adjacent space.
	Space is occupied, so boulder checks if the object pushing it can be pushed back.
	Space behind player contains another moveable object, so player must check if the second object can be moved.
	The second object cannot move, so the player moves back to the original position.

	Calls Boulder.CanBePushed(by player, to the left) which
	Calls Player.CanBeBouncedBack(to the right) which
	Calls 2ndBoulder.CanBeBouncedBack(to the right) which return no
	
6.	Player moves into space occupied by boulder. Boulder checks adjacent space.
	Space is occupied, so boulder checks if the object pushing it can be pushed back.
	Space behind player is free, so both player and boulder can move backwards.

	Calls Boulder.CanBePushed(by player, to the left) which
		Calls Boulder2.CanBePushed(by boulder, the the left) which returns no
		Calls Player.CanBeBouncedBack(to the right) which returns yes

7.	Player moves into space occupied by boulder. Boulder checks adjacent space.
	Space is occupied, so boulder checks if the object pushing it can be pushed back.
	Space behind player contains another moveable object, so player must check if the second object can be moved.

	Calls Boulder.CanBePushed(by player, to the left) which
		Calls Player.CanBeBouncedBack(to the right) which
			Calls Boulder2.CanBeBouncedBack(to the right) which
				Calls Boulder3.CanBeBouncedBack(to the right) which returns no

Note that shots can push, but cannot start a pushback.
So boulder and player must have a method that answers the question "can be pushed".

If a shot hits a boulder, it can call CanBeBouncedBack so that it won't try to bounce.
